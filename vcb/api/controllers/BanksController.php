<?php

/**
 * Created by PhpStorm.
 * User: THUY
 * Date: 8/12/2016
 * Time: 9:52 AM
 */

namespace api\controllers;

use common\models\db\Bank;
use common\models\db\PaymentMethod;
use common\models\db\UserLogin;
use yii\filters\auth\HttpBasicAuth;
use yii\rest\ActiveController;
use yii\web\Response;


class BanksController extends ActiveController
{
    public $modelClass = 'common\models\db\Bank';
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        \Yii::$app->user->enableSession = false;
    }
    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['authenticator'] = [
            'class' => HttpBasicAuth::className(),
            'auth' => function ($username, $password) {
                $check_user = UserLogin::find()->where(['email' => $username])->andWhere(['status'=>1])->count();
                if($check_user>0) {
                    $user = UserLogin::find()->where(['email' => $username])->andWhere(['status'=>1])->one();
                    if ($user->password == md5(md5($password))) {
                        return $user;
                    }
                    return null;
                }
                else{
                    return null;
                }
            },

        ];
        //$behaviors['contentNegotiator']['formats']['text/html'] = Response::FORMAT_RAW; // || Response::FORMAT_XML

        return $behaviors;
    }

    public function actions()
    {
        $actions = parent::actions();
        unset($actions['create']);
        unset($actions['index']);
        unset($actions['update']);

        //$actions['index']['prepareDataProvider'] = [$this, 'prepareDataProvider'];

        return $actions;
    }

    public function actionIndex(){
        \Yii::$app ->response->format = Response::FORMAT_JSON;
        // Lấy ra danh sách BankID thanh toán đc ATM
        $queryATM = PaymentMethod::find()->select(['bank_id'])->where(['status'=>1])->andWhere(['like','code','ATM']);
        // Lấy ra dánh sách BankID có chấp nhận InternetBanking
        $queryIB = PaymentMethod::find()->select(['bank_id'])->where(['status'=>1])->andWhere(['like','code','IB-ONLINE']);

        $queryQR = PaymentMethod::find()->select(['bank_id'])->where(['status'=>1])->andWhere(['like','code','QR-CODE']);

        $queryWallet = PaymentMethod::find()->select(['bank_id'])->where(['status'=>1])->andWhere(['like','code','WALLET']);

        foreach ($queryATM->all() as $key){
            $array_atm[] = $key->bank_id;
        }

        foreach ($queryIB->all() as $key){
            $array_ib[] = $key->bank_id;
        }
//        echo "<pre>";
//        print_r($queryQR->all()); exit();

        foreach ($queryQR->all() as $key){
            $array_qr[] = $key->bank_id;
        }

        foreach ($queryWallet->all() as $key){
            $array_wallet[] = $key->bank_id;
        }



        $banksATM = Bank::find()->where(['id'=>$array_atm])->andWhere(['status'=>1])->all();
        $banksIB = Bank::find()->where(['id'=>$array_ib])->andWhere(['status'=>1])->all();
        $banksQR = Bank::find()->where(['id'=>$array_qr])->andWhere(['status'=>1])->all();
        $banksWallet = Bank::find()->where(['id'=>$array_wallet])->andWhere(['status'=>1])->all();

        if(count($banksATM) > 0 || count($banksIB) > 0) {
            $data = [
                'error_code' => 00,
                'message' => 'Lấy danh sách ngân hàng thành công'
            ];
            foreach ($banksATM as $item){
                $bankListATM = [
                    'bankID' => $item->id,
                    'bankName' => $item->name,
                    'bankCode' => $item->code,
                ];
                $data['bankListATM'][] = $bankListATM;
            }

            foreach ($banksIB as $item){
                $bankListIB = [
                    'bankID' => $item->id,
                    'bankName' => $item->name,
                    'bankCode' => $item->code,
                ];
                $data['bankListIB'][] = $bankListIB;
            }

            foreach ($banksQR as $item){
                $bankListQR = [
                    'bankID' => $item->id,
                    'bankName' => $item->name,
                    'bankCode' => $item->code,
                ];
                $data['bankListQR'][] = $bankListQR;
            }

            foreach ($banksWallet as $item){
                $bankListWallet = [
                    'bankID' => $item->id,
                    'bankName' => $item->name,
                    'bankCode' => $item->code,
                ];
                $data['bankListWallet'][] = $bankListWallet;
            }
        }
        else{
            $data = [
                'error_code' => 11,
                'message' => 'Không tìm thấy kết quả'
            ];
        }
        return $data;
    }

}
