<?php


namespace checkout\controllers;


use common\api\CheckoutVersion1_0StaticApi;
use common\models\business\CheckoutOrderBusiness;
use common\models\db\CheckoutOrder;
use Yii;
use yii\web\Controller;
use yii\web\Response;

class IntermediaryController extends Controller
{
    public function beforeAction($action)
    {
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionVectorCar()
    {
        Yii::$app->response->format = Response::FORMAT_JSON;

        $error_code = '0001';
        $error_message = 'Lỗi không xác định';
        $url = '';
        $order_code = $_GET['order_code'];
        $amount = $_GET['amount'];
        $return_url = $_GET['return_url'];
        $checksum = $_GET['checksum'];
        $str_checksum = md5($order_code . '|' . $amount . '|' . $return_url);
        if ($str_checksum != $checksum) {
            $error_code = '1113';
            $error_message = 'Sai checksum';
        }
        $params = [
            'function' => 'CreateOrder',
//            'merchant_site_code' => $GLOBALS['MID_VECTOR_CAR'],
            'merchant_site_code' => 1320 ,
            'order_code' => $order_code,
            'order_description' => 'Thanh toan đơn hàng ' . $order_code,
            'amount' => $amount,
            'currency' => 'VND',
            'buyer_fullname' => 'Vector car',
            'buyer_email' => 'vectorcar@gmail.com',
            'buyer_mobile' => '0909862965',
            'buyer_address' => 'TP.HCM',
            'payment_method_code' => 'CREDIT-CARD',
            'return_url' => $return_url.'?type=success',
            'notify_url' => $return_url.'?type=success',
            'cancel_url' => $return_url.'?type=cancel',
            'time_limit' => date('c', time() + 3600),
            'language' => 'vi',
            'object_code' => '',
            'object_name' => '',

        ];
        $result = self::_createOrder($params);
        if ($result['error_code'] == '0000') {
            $url = $result['result_data']['checkout_url'];
            $error_code = $result['error_code'];
            $error_message = '';
        } else {
            $error_code = $result['error_code'];
            $error_message = 'Lỗi';
        }
        return [
            'error_code' => $error_code,
            'error_message' => $error_message,
            'redirect_url' => $url,
        ];

    }

    protected function _createOrder($params)
    {
        $error_code = '0001';
        $result_data = null;


//        $merchant= Merchant::findOne($params['merchant_site_code']);
//        if ($merchant->email_requirement==0){
//            if ($params['buyer_email']==''){
//                $params['buyer_email'] = 'not-required@not.not';
//            }
//        }
        //-------------
        $inputs = array(
            'version' => '1.0',
            'language_id' => 2,//en
            'merchant_id' => $params['merchant_site_code'],
            'order_code' => $params['order_code'],
            'order_description' => $params['order_description'],
            'amount' => $params['amount'],
            'orginal_amount' => $params['amount'],
            'currency' => $params['currency'],
            'return_url' => $params['return_url'],
            'cancel_url' => $params['cancel_url'],
            'notify_url' => $params['notify_url'],
            'time_limit' => strtotime($params['time_limit']),
            'buyer_fullname' => $params['buyer_fullname'],
            'buyer_mobile' => $params['buyer_mobile'],
            'buyer_email' => $params['buyer_email'],
            'buyer_address' => $params['buyer_address'],
            'object_code' => $params['object_code'],
            'object_name' => $params['object_name'],
            'user_id' => 0,
            'currency_exchange' => $params['currency_exchange'] ?? "",
        );
        $result = CheckoutOrderBusiness::add($inputs);
        if ($result['error_message'] === '') {
            $token_code = $result['token_code'];
            $error_code = '0000';

            $result_data = array(
                'checkout_url' => CheckoutOrder::getCheckoutUrl('1.0', $token_code, $params),
                'token_code' => $token_code,
            );
        } else {
            echo $result['error_message'];
            $error_code = '0101';
        }
        return array('error_code' => $error_code, 'result_data' => $result_data);
    }


}